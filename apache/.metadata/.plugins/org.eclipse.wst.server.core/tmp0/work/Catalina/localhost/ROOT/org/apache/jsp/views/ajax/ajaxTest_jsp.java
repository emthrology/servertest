/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-05-19 16:35:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.ajax;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member1.model.vo.Member;

public final class ajaxTest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1558269211000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member1.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t");
      out.write("\n");
      out.write("\n");
      out.write("    ");

    	/* 세션이 있는 한 항상 불러오는 객체  */
    	Member m = (Member)session.getAttribute("member1");
    
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"/js/jquery-3.3.1.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/bootstrap.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/header/style.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/header/responsive.css\">\n");
      out.write("<script type=\"text/javascript\" src=\"/js/bootstrap.js\"></script>\n");
      out.write("\n");
      out.write("<header class=\"header_area\">\n");
      out.write("\t<div class=\"main_menu\">\n");
      out.write("\t\t<nav class=\"navbar navbar-expand-lg navbar-light\">\n");
      out.write("\t\t\t<div class=\"container\">\n");
      out.write("\t\t\t\t<a class=\"navbar-brand logo h\" href=\"/index.jsp\"><img src=\"/img/logo.png\" width=\"165\" height=\"80\"></a>\n");
      out.write("\t\t\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expaneded=\"false\" aria-label=\"Toggle navigation\">\n");
      out.write("\t\t\t\t\t<span class=\"icon-bar\"></span>\n");
      out.write("\t\t\t\t\t<span class=\"icon-bar\"></span>\n");
      out.write("\t\t\t\t\t<span class=\"icon-bar\"></span>\n");
      out.write("\t\t\t\t</button>\n");
      out.write("\t\t\t\t<div class=\"collapse navbar-collapse offset\" id=\"navbarSupportedContent\">\n");
      out.write("\t\t\t\t\t<ul class=\"nav navbar-nav menu_nav ml-auto\">\n");
      out.write("\t\t\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\" href=\"/noticeList\">공지사항</a></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\" href=\"/boardList\">자유게시판</a></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\" href=\"/photoList\">사진게시판</a></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\" href=\"/views/api/apiTest.jsp\">API테스트</a></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\" href=\"/views/ajax/ajaxTest.jsp\">AJAX test</a></li>\n");
      out.write("\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"right-button\">\n");
      out.write("\t\t\t\t\t<ul>\n");
      out.write("\t\t\t\t\t\t");
 if(m==null) {
      out.write("\n");
      out.write("\t\t\t\t\t\t<li class=\"nav-item\"><button class=\"btn btn-danger\" onclick=\"location.href='/views/member1/login.jsp'\">로그인</button></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"nav-item\"><button class=\"btn btn-danger\" onclick=\"location.href='/views/member1/join.jsp'\">회원가입</button></li>\n");
      out.write("\t\t\t\t\t\t");
 }else { 
      out.write("\n");
      out.write("\t\t\t\t\t\t<li class=\"nav-item\"><button class=\"btn btn-danger\" onclick=\"location.href='/myInfo?memberId=");
      out.print(m.getMemberId() );
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print(m.getMemberName() );
      out.write("</button></li> <!-- get방식으로 서블릿에 전달 -->\n");
      out.write("\t\t\t\t\t\t<li class=\"nav-item\"><button class=\"btn btn-danger\" onclick=\"location.href='/logout'\">로그아웃</button></li>\n");
      out.write("\t\t\t\t\t\t");
 } 
      out.write("\n");
      out.write("\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</nav>\n");
      out.write("\t</div>\n");
      out.write("</header>");
      out.write("\n");
      out.write("\t<section>\n");
      out.write("\t\t<div class=\"container\" style=\"color:black;\">\n");
      out.write("\t\t\t<h3>1.AJAX 서버에 전송값 보내기</h3>\n");
      out.write("\t\t\t<p>버튼 선택시 전송값을 서버에 출력하기</p>\n");
      out.write("\t\t\t<input type=\"text\" class=\"form-control\" id=\"msg1\" placeholder=\"메시지 입력\">\n");
      out.write("\t\t\t<button class=\"btn btn-primary\" onclick=\"jsFunction();\">보내기(JS)</button>\n");
      out.write("\t\t\t<h3>2.Jquery 방식으로 서버에 보내기</h3>\n");
      out.write("\t\t\t<button class=\"btn btn-primary\" id=\"jQ1\">보내기(JQuery)</button>\n");
      out.write("\t\t\t<hr>\n");
      out.write("\t\t\t<h3>2.버튼 클릭 시 서버에서 보낸 값 사용자가 수신</h3>\n");
      out.write("\t\t\t<button class=\"btn btn-primary\" id=\"jQ2\">서버에서 보낸 값 받기</button>\n");
      out.write("\t\t\t<p id=\"p2\" class=\"border border-danger\"></p>\n");
      out.write("\t\t\t<h3>3.서버로 기본형 전송값 보내고,결과값 받기</h3>\n");
      out.write("\t\t\t첫번째 숫자 : <input type=\"text\" id=\"firstValue\">\n");
      out.write("\t\t\t두번째 숫자 : <input type=\"text\" id=\"secondValue\">\n");
      out.write("\t\t\t<button id=\"jQ3\">주고받기</button>\n");
      out.write("\t\t\t<p id=\"p3\" class=\"border border-danger\"></p>\n");
      out.write("\t\t\t<hr>\n");
      out.write("\t\t\t<h3>4.서버로 Object형 전송값 보내고, 결과 처리</h3>\n");
      out.write("\t\t\t이름 : <input type=\"text\" id=\"studentName\"><br>\n");
      out.write("\t\t\t나이 : <input type=\"text\" id=\"studentAge\"><br>\n");
      out.write("\t\t\t주소 : <input type=\"text\" id=\"studentAddr\"><br>\n");
      out.write("\t\t\t이클립스 콘솔에서 확인\n");
      out.write("\t\t\t<button class=\"btn btn-primary\" id=\"jQ4\">Object 주기</button>\n");
      out.write("\t\t\t<hr>\n");
      out.write("\t\t\t<h3>5.서버로 기본값 보내고 결과로 객체 받아서 처리</h3>\n");
      out.write("\t\t\t<p>유저 번호를 넘겨주고, 해당하는 유저 정보 받기</p>\n");
      out.write("\t\t\t유저 번호 입력 : <input type=\"text\" id=\"userNum\"><br>\n");
      out.write("\t\t\t<button class=\"btn btn-primary\" id=\"jQ5\">실행</button>\n");
      out.write("\t\t\t<p id=\"p5\" class=\"border border-danger\"></p>\n");
      out.write("\t\t\t<h3>6.서버로 기본형 전송값 보내고, 결과로 리스트 객체 받아서처리</h3>\n");
      out.write("\t\t\t<p>JSON사용</p>\n");
      out.write("\t\t\t<p>유저번호를 입력받아 해당 유저번호 가져오기 -> 없는 경우 전체 리스트 가져오기</p>\n");
      out.write("\t\t\t유저번호 입력 : <input type = \"text\" id=\"userNum2\"><br>\n");
      out.write("\t\t\t<button class=\"btn btn-primary\" id=\"jQ6\">실행</button>\n");
      out.write("\t\t\t<p id=\"p6\" class=\"border border-danger\"></p>\n");
      out.write("\t\t\t<hr>\n");
      out.write("\t\t\t<h3>7.서버로 기본형 전송값 여러개 보내고, 결과로 리스트 객체 받아서처리</h3>\n");
      out.write("\t\t\t<p>JSON사용</p>\n");
      out.write("\t\t\t<p>유저번호를 입력받아 해당 유저번호 가져오기 -> 없는 경우 전체 리스트 가져오기</p>\n");
      out.write("\t\t\t유저번호 입력(숫자,숫자,숫자)(','기준으로 구분) : <input type = \"text\" id=\"userNum3\"><br>\n");
      out.write("\t\t\t<button class=\"btn btn-primary\" id=\"jQ7\">실행</button>\n");
      out.write("\t\t\t<p id=\"p7\" class=\"border border-danger\"></p>\n");
      out.write("\t\t\t<hr>\n");
      out.write("\t\t\t<h3>8.서버로 기본형 전송값 여러개 보내고, 결과로 Map 객체 받아서처리</h3>\n");
      out.write("\t\t\t<p>JSON사용</p>\n");
      out.write("\t\t\t<p>유저번호를 입력받아 해당 유저번호 가져오기 -> 없는 경우 전체 Map 가져오기</p>\n");
      out.write("\t\t\t유저번호 입력(숫자,숫자,숫자)(','기준으로 구분) : <input type = \"text\" id=\"userNum4\"><br>\n");
      out.write("\t\t\t<button class=\"btn btn-primary\" id=\"jQ8\">실행</button>\n");
      out.write("\t\t\t<p id=\"p8\" class=\"border border-danger\"></p>\n");
      out.write("\t\t\t<hr>\n");
      out.write("\t\t\t<h3>9.서버유저정보로 표 구성</h3>\n");
      out.write("\t\t\t<p>JSON사용</p>\n");
      out.write("\t\t\t<p>현재 유저 정보를 받아 테이블에 뿌린다</p>\n");
      out.write("\t\t\t<button class=\"btn btn-primary\" id=\"jQ9\">실행</button>\n");
      out.write("\t\t\t<table id=\"userTbl\" class=\"table\">\n");
      out.write("\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<th>번호</th>\n");
      out.write("\t\t\t\t\t\t<th>이름</th>\n");
      out.write("\t\t\t\t\t\t<th>주소</th>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t</thead>\n");
      out.write("\t\t\t\t<tbody>\n");
      out.write("\t\t\t\t</tbody>\n");
      out.write("\t\t\t</table>\n");
      out.write("\t\t\t<hr>\n");
      out.write("\t\t\t<h3>10.서버에서 리스트 받아 select로 표현</h3>\n");
      out.write("\t\t\t<p>입력한 유저를 선택한 상태의 select 구현</p>\n");
      out.write("\t\t\t유저 이름 : <input type=\"text\" id=\"userName10\"><br>\n");
      out.write("\t\t\t<button class=\"btn btn-primary\" id=\"jQ10\">실행</button>\n");
      out.write("\t\t\t<select id=\"select10\"></select>\n");
      out.write("\t\t\t<hr>\n");
      out.write("\t\t\t<h3>11.서버에서 리스트 받아 select로 표현</h3>\n");
      out.write("\t\t\t<p>GSON사용</p>\n");
      out.write("\t\t\t<p>입력한 유저를 선택한 상태의 select 구현</p>\n");
      out.write("\t\t\t유저 이름 : <input type=\"text\" id=\"userName11\"><br>\n");
      out.write("\t\t\t<button class=\"btn btn-primary\" id=\"jQ11\">실행</button>\n");
      out.write("\t\t\t<select id=\"select11\"></select>\n");
      out.write("\t\t\t<hr>\n");
      out.write("\t\t\t<h3>12.서버에서 리스트 받아 map으로 표현</h3>\n");
      out.write("\t\t\t<p>GSON사용</p>\n");
      out.write("\t\t\t<p>입력한 유저를 선택한 상태의 select 구현</p>\n");
      out.write("\t\t\t유저 이름 : <input type=\"text\" id=\"userName12\"><br>\n");
      out.write("\t\t\t<button class=\"btn btn-primary\" id=\"jQ12\">실행</button>\n");
      out.write("\t\t\t<select id=\"select12\"></select>\n");
      out.write("\t\t</div>\n");
      out.write("\t</section>\n");
      out.write("\t<script>\n");
      out.write("\t\tfunction jsFunction(){\n");
      out.write("\t\t\t//1.XMLHttpRequest 인스턴스 생성\n");
      out.write("\t\t\tvar xhr = new XMLHttpRequest();\n");
      out.write("\t\t\tvar msg = document.getElementById(\"msg1\").value;\n");
      out.write("\t\t\t//2.요청정보설정\n");
      out.write("\t\t\txhr.open(\"GET\",\"/ajaxTest1.do?msg=\"+msg,true);\n");
      out.write("\t\t\t//3.데이터 처리에 따라 동작할 함수 설정\n");
      out.write("\t\t\txhr.onreadystatechange = function() {\n");
      out.write("\t\t\t\tif(this.readyState==4 && this.status==200) {\n");
      out.write("\t\t\t\t\tconsole.log(\"전송 완료\");\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\tconsole.log(\"전송 중\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t//4.서버에 요청\n");
      out.write("\t\t\txhr.send();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#jQ1\").click(function(){\n");
      out.write("\t\t\tvar msg = $(\"#msg1\").val();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"/ajaxTest1.do\",\n");
      out.write("\t\t\t\tdata : {msg : msg},\n");
      out.write("\t\t\t\ttype : \"get\",\n");
      out.write("\t\t\t\tsuccess : function(){\n");
      out.write("\t\t\t\t\tconsole.log(\"서버 전송 완료\");\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror : function(){\n");
      out.write("\t\t\t\t\tconsole.log(\"서버 전송 실패\");\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\tcomplete : function(){\n");
      out.write("\t\t\t\t\tconsole.log(\"finally블록같은곳\")\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#jQ2\").click(function(){\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"/ajaxTest2.do\",\n");
      out.write("\t\t\t\ttype : \"get\",\n");
      out.write("\t\t\t\tsuccess : function(data) {\n");
      out.write("\t\t\t\t\t$(\"#p2\").html(data);\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror : function() {\n");
      out.write("\t\t\t\t\tconsole.log(\"실패\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#jQ3\").click(function(){\n");
      out.write("\t\t\tvar fstVal = $(\"#firstValue\").val();\n");
      out.write("\t\t\tvar secVal = $(\"#secondValue\").val();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"/ajaxTest3.do\",\n");
      out.write("\t\t\t\ttype : \"get\",\n");
      out.write("\t\t\t\tdata : {firstValue : fstVal, secondValue : secVal},\n");
      out.write("\t\t\t\tsuccess : function(data) {\n");
      out.write("\t\t\t\t\t$(\"#p3\").html(data);\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror : function() {\n");
      out.write("\t\t\t\t\tconsole.log(\"전송 실패\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#jQ4\").click(function(){\n");
      out.write("\t\t\tvar studentName = $(\"#studentName\").val();\n");
      out.write("\t\t\tvar studentAge = $(\"#studentAge\").val();\n");
      out.write("\t\t\tvar studentAddr = $(\"#studentAddr\").val();\n");
      out.write("\t\t\t//객체 생성\n");
      out.write("\t\t\tvar student = {studentName:studentName, studentAge:studentAge, studentAddr:studentAddr};\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"/ajaxTest4.do\",\n");
      out.write("\t\t\t\ttype : \"get\",\n");
      out.write("\t\t\t\tdata : student,\n");
      out.write("\t\t\t\tsuccess : function() {\n");
      out.write("\t\t\t\t\tconsole.log(\"전송 성공\");\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror : function() {\n");
      out.write("\t\t\t\t\tconsole.log(\"전송 실패\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#jQ5\").click(function(){\n");
      out.write("\t\t\tvar userNum = $(\"#userNum\").val();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"/ajaxTest5.do\",\n");
      out.write("\t\t\t\ttype : \"get\",\n");
      out.write("\t\t\t\tdata : {userNum : userNum},\n");
      out.write("\t\t\t\tsuccess : function(data) {\n");
      out.write("\t\t\t\t\tvar userNo = data.userNo;\n");
      out.write("\t\t\t\t\tvar userName = decodeURIComponent(data.userName);\n");
      out.write("\t\t\t\t\tvar userAddr = decodeURIComponent(data.userAddr);\n");
      out.write("\t\t\t\t\t$(\"#p5\").html(\"유저 번호 : \"+userNo+\"<br>유저 이름 : \"+userName+\"<br>유저 주소 : \"+userAddr);\n");
      out.write("\t\t\t\t}, \n");
      out.write("\t\t\t\terror : function() {\n");
      out.write("\t\t\t\t\tconsole.log(\"전송 실패\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#jQ6\").click(function(){\n");
      out.write("\t\t\tvar userNum = $(\"#userNum2\").val();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"/ajaxTest6.do\",\n");
      out.write("\t\t\t\ttype : \"get\",\n");
      out.write("\t\t\t\tdata : {userNum:userNum},\n");
      out.write("\t\t\t\tsuccess : function(data){ /* JS에서 list는 array처럼 취급된다 */\n");
      out.write("\t\t\t\t\tvar resultText=\"\";\n");
      out.write("\t\t\t\t\tfor(var i=0; i<data.length; i++){\n");
      out.write("\t\t\t\t\t\tvar userNo = data[i].userNo;\n");
      out.write("\t\t\t\t\t\tvar userName = decodeURIComponent(data[i].userName);\n");
      out.write("\t\t\t\t\t\tvar userAddr =  decodeURIComponent(data[i].userAddr);\n");
      out.write("\t\t\t\t\t\tresultText += \"유저번호 : \"+userNo+\"/유저이름 : \"+userName+\"/유저주소 : \"+userAddr+\"<br>\";\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t$(\"#p6\").html(resultText);\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror : function(){\n");
      out.write("\t\t\t\t\tconsole.log(\"아무튼 실패\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#jQ7\").click(function(){\n");
      out.write("\t\t\tvar userNum = $(\"#userNum3\").val();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"/ajaxTest7.do\",\n");
      out.write("\t\t\t\ttype : \"get\",\n");
      out.write("\t\t\t\tdata : {userNum:userNum},\n");
      out.write("\t\t\t\tsuccess : function(data){ /* JS에서 list는 array처럼 취급된다 */\n");
      out.write("\t\t\t\t\tvar resultText=\"\";\n");
      out.write("\t\t\t\t\tfor(var i=0; i<data.length; i++){\n");
      out.write("\t\t\t\t\t\tvar userNo = data[i].userNo;\n");
      out.write("\t\t\t\t\t\tvar userName = decodeURIComponent(data[i].userName);\n");
      out.write("\t\t\t\t\t\tvar userAddr =  decodeURIComponent(data[i].userAddr);\n");
      out.write("\t\t\t\t\t\tresultText += \"유저번호 : \"+userNo+\"/유저이름 : \"+userName+\"/유저주소 : \"+userAddr+\"<br>\";\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t$(\"#p7\").html(resultText);\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror : function(){\n");
      out.write("\t\t\t\t\tconsole.log(\"아무튼 실패\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\t\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#jQ8\").click(function(){\n");
      out.write("\t\t\tvar userNum = $(\"#userNum4\").val();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"/ajaxTest8.do\",\n");
      out.write("\t\t\t\ttype : \"get\",\n");
      out.write("\t\t\t\tdata : {userNum:userNum},\n");
      out.write("\t\t\t\tsuccess : function(data){ /* JS에서 list는 array처럼 취급된다 */\n");
      out.write("\t\t\t\t\tvar resultText=\"\";\n");
      out.write("\t\t\t\t\tvar keys = Object.keys(data); /* JS 객체는 기본적으로 map이기 때문에 이 메소드를 사용하면 객체의 key들을 모아 객체로 만들어 인덱싱에 활용할 수 있다 */\n");
      out.write("\t\t\t\t\tfor(var i=0; i<keys.length; i++){\n");
      out.write("\t\t\t\t\t\tvar userNo = data[keys[i]].userNo;\n");
      out.write("\t\t\t\t\t\tvar userName = decodeURIComponent(data[keys[i]].userName);\n");
      out.write("\t\t\t\t\t\tvar userAddr =  decodeURIComponent(data[keys[i]].userAddr);\n");
      out.write("\t\t\t\t\t\tresultText += \"유저번호 : \"+userNo+\"/유저이름 : \"+userName+\"/유저주소 : \"+userAddr+\"<br>\";\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t$(\"#p8\").html(resultText);\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror : function(){\n");
      out.write("\t\t\t\t\tconsole.log(\"아무튼 실패\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\t\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#jQ9\").click(function(){\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"/ajaxTest9.do\",\n");
      out.write("\t\t\t\ttype : \"get\",\n");
      out.write("\t\t\t\tsuccess : function(data) {\n");
      out.write("\t\t\t\t\tvar $tbody = $(\"#userTbl tbody\");\n");
      out.write("\t\t\t\t\tfor(var i=0; i<data.length; i++) {\n");
      out.write("\t\t\t\t\t\tvar $tr = $(\"<tr>\");\n");
      out.write("\t\t\t\t\t\tvar $td = $(\"<td>\");\n");
      out.write("\t\t\t\t\t\tvar $noTd = $(\"<td>\").html(data[i].userNo);\n");
      out.write("\t\t\t\t\t\tvar $nameTd = $(\"<td>\").html(decodeURIComponent(data[i].userName));\n");
      out.write("\t\t\t\t\t\tvar $addrTd = $(\"<td>\").html(decodeURIComponent(data[i].userAddr));\n");
      out.write("\t\t\t\t\t\t$tr.append($noTd).append($nameTd).append($addrTd);\n");
      out.write("\t\t\t\t\t\t$tbody.append($tr);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror : function(){\n");
      out.write("\t\t\t\t\tconsole.log(\"아무튼 실패\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\t\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#jQ10\").click(function(){\n");
      out.write("\t\t\tvar selectName = $(\"#userName10\").val();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"/ajaxTest9.do\",\n");
      out.write("\t\t\t\ttype : \"get\",\n");
      out.write("\t\t\t\tsuccess : function(data) {\n");
      out.write("\t\t\t\t\tvar $select = $(\"#select10\");\n");
      out.write("\t\t\t\t\t$select.find(\"option\").remove(); /* 버튼 누를 때마다 추가되는걸 방지하기 위해 초기화 */\n");
      out.write("\t\t\t\t\tfor(var i=0; i<data.length; i++){\n");
      out.write("\t\t\t\t\t\tvar userNo = data[i].userNo;\n");
      out.write("\t\t\t\t\t\tvar userName = decodeURIComponent(data[i].userName);\n");
      out.write("\t\t\t\t\t\tvar userAddr = decodeURIComponent(data[i].userAddr);\n");
      out.write("\t\t\t\t\t\tvar selected = \"\";\n");
      out.write("\t\t\t\t\t\tif(userName == selectName){ /* 자바 아님 */\n");
      out.write("\t\t\t\t\t\t\tvar selected = \"selected\";\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t$select.append(\"<option value='\"+userNo+\"' \"+selected+\">\"+userName+\"</option>\");\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror : function() {\n");
      out.write("\t\t\t\t\tconsole.log(\"아무튼 실패\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#jQ11\").click(function(){\n");
      out.write("\t\t\tvar selectName = $(\"#userName11\").val();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"/ajaxTest11.do\",\n");
      out.write("\t\t\t\ttype : \"get\",\n");
      out.write("\t\t\t\tsuccess : function(data) {\n");
      out.write("\t\t\t\t\tvar $select = $(\"#select11\");\n");
      out.write("\t\t\t\t\t$select.find(\"option\").remove(); /* 버튼 누를 때마다 추가되는걸 방지하기 위해 초기화 */\n");
      out.write("\t\t\t\t\tfor(var i=0; i<data.length; i++){\n");
      out.write("\t\t\t\t\t\tvar userNo = data[i].userNo;\n");
      out.write("\t\t\t\t\t\tvar userName = data[i].userName; /* GSON은 인코딩자료도 알아서 디코딩해준다; decodeURIComponent 필요 없음 */\n");
      out.write("\t\t\t\t\t\tvar userAddr = data[i].userAddr;\n");
      out.write("\t\t\t\t\t\tvar selected = \"\";\n");
      out.write("\t\t\t\t\t\tif(userName == selectName){ /* 자바 아님 */\n");
      out.write("\t\t\t\t\t\t\tvar selected = \"selected\";\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t$select.append(\"<option value='\"+userNo+\"' \"+selected+\">\"+userName+\"</option>\");\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror : function() {\n");
      out.write("\t\t\t\t\tconsole.log(\"아무튼 실패\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#jQ12\").click(function(){\n");
      out.write("\t\t\tvar selectName = $(\"#userName12\").val();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"/ajaxTest12.do\",\n");
      out.write("\t\t\t\ttype : \"get\",\n");
      out.write("\t\t\t\tsuccess : function(data) {\n");
      out.write("\t\t\t\t\tvar $select = $(\"#select12\");\n");
      out.write("\t\t\t\t\t$select.find(\"option\").remove(); /* 버튼 누를 때마다 추가되는걸 방지하기 위해 초기화 */\n");
      out.write("\t\t\t\t\tfor(var key in data){ /* key에 하나씩 접근해 데이터를 꺼내옴 */\n");
      out.write("\t\t\t\t\t\tvar userNo = data[key].userNo;\n");
      out.write("\t\t\t\t\t\tvar userName = data[key].userName; /* GSON은 인코딩자료도 알아서 디코딩해준다; decodeURIComponent 필요 없음 */\n");
      out.write("\t\t\t\t\t\tvar userAddr = data[key].userAddr;\n");
      out.write("\t\t\t\t\t\tvar selected = \"\";\n");
      out.write("\t\t\t\t\t\tif(userName == selectName){ /* 자바 아님 */\n");
      out.write("\t\t\t\t\t\t\tvar selected = \"selected\";\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t$select.append(\"<option value='\"+userNo+\"' \"+selected+\">\"+userName+\"</option>\");\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror : function() {\n");
      out.write("\t\t\t\t\tconsole.log(\"아무튼 실패\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
